//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreadModelingGame.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Threats {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Threats() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ThreadModelingGame.Core.Resources.Threats", typeof(Threats).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a server unavailable or unusable without ever authenticating, and the problem persists after the attacker goes away (server, anonymous, persistent)..
        /// </summary>
        internal static string DenialOfService_10 {
            get {
                return ResourceManager.GetString("DenialOfService_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacke can make your authentication system unusable or unavailable..
        /// </summary>
        internal static string DenialOfService_2 {
            get {
                return ResourceManager.GetString("DenialOfService_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a client unavailable or unusable but the problem goes away when the attacker stops (client, authenticated, temporary)..
        /// </summary>
        internal static string DenialOfService_3 {
            get {
                return ResourceManager.GetString("DenialOfService_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a server unavailable or unusable but the problem goes away when the attacker stops (server, authenticated, temporary)..
        /// </summary>
        internal static string DenialOfService_4 {
            get {
                return ResourceManager.GetString("DenialOfService_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a client unavailable or unusable without ever authenticating, but the problem goes away when the attacker stops (client, anonymous, temporary)..
        /// </summary>
        internal static string DenialOfService_5 {
            get {
                return ResourceManager.GetString("DenialOfService_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a server unavailable or unusable without ever authenticating, bu tthe problem goes away when the attacker stops (server, anonymous, temporary)..
        /// </summary>
        internal static string DenialOfService_6 {
            get {
                return ResourceManager.GetString("DenialOfService_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a client unavailable or unusable and the problem persists after the attacker goes away (client, authenticated, persistent)..
        /// </summary>
        internal static string DenialOfService_7 {
            get {
                return ResourceManager.GetString("DenialOfService_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a server unavailable or unusable and the problem persists after the attacker goes away (server, authenticated, persistent)..
        /// </summary>
        internal static string DenialOfService_8 {
            get {
                return ResourceManager.GetString("DenialOfService_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a client unvailable or unusable without erver authenticating, and the problem persists after the attacker goes away (client, anonymous, persistent)..
        /// </summary>
        internal static string DenialOfService_9 {
            get {
                return ResourceManager.GetString("DenialOfService_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Denial of Service attack..
        /// </summary>
        internal static string DenialOfService_A {
            get {
                return ResourceManager.GetString("DenialOfService_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can cause the logging subsystem to stop working..
        /// </summary>
        internal static string DenialOfService_J {
            get {
                return ResourceManager.GetString("DenialOfService_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can amplify a Denial of Service attack through this component with amplification on the order of 100:1..
        /// </summary>
        internal static string DenialOfService_K {
            get {
                return ResourceManager.GetString("DenialOfService_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can amplify a Denial of Service attack through this component with amplification on th eorder of 10:1..
        /// </summary>
        internal static string DenialOfService_Q {
            get {
                return ResourceManager.GetString("DenialOfService_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s no reasonable way for a caller to figure out what security assumptions you make..
        /// </summary>
        internal static string ElevationOfPrivilege_10 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can force data through different validation paths which give different results..
        /// </summary>
        internal static string ElevationOfPrivilege_5 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could take advantage of .NET permissions you ask for, but don&apos;t use..
        /// </summary>
        internal static string ElevationOfPrivilege_6 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can provide a pointer across a trust boundary, rather than data which can be validated..
        /// </summary>
        internal static string ElevationOfPrivilege_7 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can enter data that is checked while still under the attacker&apos;s control and used later on the other side of a trust boundary..
        /// </summary>
        internal static string ElevationOfPrivilege_8 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s no reasonable way for callers to figure out what validation of tainted data you perform before passing it to them..
        /// </summary>
        internal static string ElevationOfPrivilege_9 {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Elevation Of Privilege attack..
        /// </summary>
        internal static string ElevationOfPrivilege_A {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can reflect input back to a user, like cross-site scripting..
        /// </summary>
        internal static string ElevationOfPrivilege_J {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can inject a command that the system will run at a higher privilege level..
        /// </summary>
        internal static string ElevationOfPrivilege_K {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You include user-generated content within your page, possibly including the content of random URLs..
        /// </summary>
        internal static string ElevationOfPrivilege_Q {
            get {
                return ResourceManager.GetString("ElevationOfPrivilege_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read information in files with no ACLs..
        /// </summary>
        internal static string InformationDisclosure_10 {
            get {
                return ResourceManager.GetString("InformationDisclosure_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can brute-force file encryption because there&apos;s no defense in place (example defense: password stretching)..
        /// </summary>
        internal static string InformationDisclosure_2 {
            get {
                return ResourceManager.GetString("InformationDisclosure_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can see error messages with security-sensitive content..
        /// </summary>
        internal static string InformationDisclosure_3 {
            get {
                return ResourceManager.GetString("InformationDisclosure_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read content because messages (for example, an email or HTTP cookie) aren&apos;t encrypted even if the channel is encrypted..
        /// </summary>
        internal static string InformationDisclosure_4 {
            get {
                return ResourceManager.GetString("InformationDisclosure_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker may be able to read a document or data because it&apos;s encrypted with a non-standard algorithm..
        /// </summary>
        internal static string InformationDisclosure_5 {
            get {
                return ResourceManager.GetString("InformationDisclosure_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read data because it&apos;s hidden or occluded (for undo or change tracking) and the user might forget that it&apos;s threre..
        /// </summary>
        internal static string InformationDisclosure_6 {
            get {
                return ResourceManager.GetString("InformationDisclosure_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can act as a &quot;man in the middle&quot; because you don&apos;t authenticate endpoints of a network connection..
        /// </summary>
        internal static string InformationDisclosure_7 {
            get {
                return ResourceManager.GetString("InformationDisclosure_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can access information through a search indexer, logger, or other such mechanism..
        /// </summary>
        internal static string InformationDisclosure_8 {
            get {
                return ResourceManager.GetString("InformationDisclosure_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read sensitive information in a file with bad ACLs..
        /// </summary>
        internal static string InformationDisclosure_9 {
            get {
                return ResourceManager.GetString("InformationDisclosure_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Information Disclosure attack..
        /// </summary>
        internal static string InformationDisclosure_A {
            get {
                return ResourceManager.GetString("InformationDisclosure_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can discover the fixed key being used to encrypt..
        /// </summary>
        internal static string InformationDisclosure_J {
            get {
                return ResourceManager.GetString("InformationDisclosure_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read network information because there&apos;s no cryptography used..
        /// </summary>
        internal static string InformationDisclosure_K {
            get {
                return ResourceManager.GetString("InformationDisclosure_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can read the entire channel because the channel (for example, HTTP or SMTP) isn&apos;t encrypted..
        /// </summary>
        internal static string InformationDisclosure_Q {
            get {
                return ResourceManager.GetString("InformationDisclosure_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can get arbitrary data into logs from unauthenticated (or weak authenticated) outsiders without validation..
        /// </summary>
        internal static string Repudiation_10 {
            get {
                return ResourceManager.GetString("Repudiation_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can pass data through the log to attack a log reader, and there&apos;s no documentation of what sorts of validation are done..
        /// </summary>
        internal static string Repudiation_2 {
            get {
                return ResourceManager.GetString("Repudiation_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A low privilege attacker can read interesting security information in the logs..
        /// </summary>
        internal static string Repudiation_3 {
            get {
                return ResourceManager.GetString("Repudiation_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can alter files or messages because the digital signature system you&apos;re implementing is weak, or uses MACs where it should use a signature..
        /// </summary>
        internal static string Repudiation_4 {
            get {
                return ResourceManager.GetString("Repudiation_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can alter log messages on a network because they lack strong integrity controls..
        /// </summary>
        internal static string Repudiation_5 {
            get {
                return ResourceManager.GetString("Repudiation_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can create a log entry without a timestamp (or no log entry is timestamped)..
        /// </summary>
        internal static string Repudiation_6 {
            get {
                return ResourceManager.GetString("Repudiation_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make the logs wrap around and lose data..
        /// </summary>
        internal static string Repudiation_7 {
            get {
                return ResourceManager.GetString("Repudiation_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can make a log lose or confuse security information..
        /// </summary>
        internal static string Repudiation_8 {
            get {
                return ResourceManager.GetString("Repudiation_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can use a shared key to authenticate as different principals, confusing the information in the logs..
        /// </summary>
        internal static string Repudiation_9 {
            get {
                return ResourceManager.GetString("Repudiation_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Repudiation attack..
        /// </summary>
        internal static string Repudiation_A {
            get {
                return ResourceManager.GetString("Repudiation_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can edit logs and there&apos;s no way to tell (perhaps because there&apos;s no heartbeat option for the logging system)..
        /// </summary>
        internal static string Repudiation_J {
            get {
                return ResourceManager.GetString("Repudiation_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system has no logs..
        /// </summary>
        internal static string Repudiation_K {
            get {
                return ResourceManager.GetString("Repudiation_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can say &quot;I didn&apos;t do that,&quot; and you would have no way to prove them wrong..
        /// </summary>
        internal static string Repudiation_Q {
            get {
                return ResourceManager.GetString("Repudiation_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can choose to use weaker or no authentication..
        /// </summary>
        internal static string Spoofing_10 {
            get {
                return ResourceManager.GetString("Spoofing_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could squat on the random port or socket that the server normally uses.&quot;.
        /// </summary>
        internal static string Spoofing_2 {
            get {
                return ResourceManager.GetString("Spoofing_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could try one credential after another and there&apos;s nothing to slow them down (online or offline)..
        /// </summary>
        internal static string Spoofing_3 {
            get {
                return ResourceManager.GetString("Spoofing_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can anonymously connect because we expect authentication to be done at a higher level..
        /// </summary>
        internal static string Spoofing_4 {
            get {
                return ResourceManager.GetString("Spoofing_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can confuse a client because there are too many ways to identify a server..
        /// </summary>
        internal static string Spoofing_5 {
            get {
                return ResourceManager.GetString("Spoofing_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can spoof a server because identifiers aren&apos;t stored on the client and checked for consistency on re-connection (that is, there&apos;s no key persistence)..
        /// </summary>
        internal static string Spoofing_6 {
            get {
                return ResourceManager.GetString("Spoofing_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can connect to a server or peer over a link that isn&apos;t authenticated (and encrypted)..
        /// </summary>
        internal static string Spoofing_7 {
            get {
                return ResourceManager.GetString("Spoofing_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could steal credentials stored on the server and reuse them (for example, a key is stored in a world readable file)..
        /// </summary>
        internal static string Spoofing_8 {
            get {
                return ResourceManager.GetString("Spoofing_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker who gets a password can reuse it (use stronger authenticators)..
        /// </summary>
        internal static string Spoofing_9 {
            get {
                return ResourceManager.GetString("Spoofing_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Spoofing attack..
        /// </summary>
        internal static string Spoofing_A {
            get {
                return ResourceManager.GetString("Spoofing_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could steal credentials stored on the client and reuse them..
        /// </summary>
        internal static string Spoofing_J {
            get {
                return ResourceManager.GetString("Spoofing_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system ships with a default admin password and doesn&apos;t force a change..
        /// </summary>
        internal static string Spoofing_K {
            get {
                return ResourceManager.GetString("Spoofing_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker could go after the way credentials are updated or recovered (account recovery doesn&apos;t require disclosing the old password)..
        /// </summary>
        internal static string Spoofing_Q {
            get {
                return ResourceManager.GetString("Spoofing_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can alter information in a data store because it has weak ACLs or includes a group which is equivalent to everyone (&quot;all Live ID holders&quot;)..
        /// </summary>
        internal static string Tampering_10 {
            get {
                return ResourceManager.GetString("Tampering_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can take advantage of your custom key exchange or integrity control which you built instead of using standard crypto..
        /// </summary>
        internal static string Tampering_3 {
            get {
                return ResourceManager.GetString("Tampering_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your code makes access control decisions all over the place, rather than with a security kernel..
        /// </summary>
        internal static string Tampering_4 {
            get {
                return ResourceManager.GetString("Tampering_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can replay data without detection because your code doesn&apos;t provide timestamps or sequence numbers..
        /// </summary>
        internal static string Tampering_5 {
            get {
                return ResourceManager.GetString("Tampering_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can write to a data store your code relies on..
        /// </summary>
        internal static string Tampering_6 {
            get {
                return ResourceManager.GetString("Tampering_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can bypass permissions because you don&apos;t make names canonical before checking access permissions..
        /// </summary>
        internal static string Tampering_7 {
            get {
                return ResourceManager.GetString("Tampering_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can manipulate data because there&apos;s no integrity protection or data on the network..
        /// </summary>
        internal static string Tampering_8 {
            get {
                return ResourceManager.GetString("Tampering_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can provide or control state information..
        /// </summary>
        internal static string Tampering_9 {
            get {
                return ResourceManager.GetString("Tampering_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;ve invented a new Tampering attack..
        /// </summary>
        internal static string Tampering_A {
            get {
                return ResourceManager.GetString("Tampering_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can write to some resource because permissions are granted to the world or there are no ACLs..
        /// </summary>
        internal static string Tampering_J {
            get {
                return ResourceManager.GetString("Tampering_J", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can load code inside your process via an extension point..
        /// </summary>
        internal static string Tampering_K {
            get {
                return ResourceManager.GetString("Tampering_K", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attacker can change parameters over a trust boundary and after validation (for example, important parameters in a hidden field in HTML, or passing a pointer to critical memory)..
        /// </summary>
        internal static string Tampering_Q {
            get {
                return ResourceManager.GetString("Tampering_Q", resourceCulture);
            }
        }
    }
}
